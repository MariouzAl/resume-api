"""add cice projects

Revision ID: c08e2ca6e40f
Revises: f61128db1f40
Create Date: 2025-08-17 23:24:02.317918

"""
from datetime import date
from typing import Sequence, Union, cast

from alembic import op
import sqlalchemy as sa
from sqlmodel import Session, select

from src.professional_experience.infrastructure.models.professional_experience_model import Company, ProfessionalExperience, Responsibility
from src.project.infrastructure.models import ProjectCategory
from src.project.infrastructure.models.project import Project
from src.project.infrastructure.models.project_images import ProjectImages
from src.skills.infrastructure.models import Skill


# revision identifiers, used by Alembic.
revision: str = 'c08e2ca6e40f'
down_revision: Union[str, Sequence[str], None] = 'f61128db1f40'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    with Session(bind=op.get_bind()) as session:
        statement = select(Company).where(Company.name == "Grupo CICE")
        cice = session.exec(statement).first()
        if cice is None:
            return
        pe = ProfessionalExperience(
            company=cice,
            key="neus-team-grupo-cice",
            endDate=date(2016, 1, 1),
            startDate=date(2012, 1, 1),
            position="Frontend and Mobile Developer",
        )
        session.add(pe)
        statement = select(ProjectCategory)
        categories = list(session.exec(statement).all())
        mobile_app_categories = [cats for cats in categories if cats.name == "Apps"]

        

        responsibilities = [
            "Developing mobile apps with Adobe Flex/Adobe Air consuming SOAP services built with Java",
            "Development of a mobile app for the Android platform using Android SDK with Java",
            "Development of a mobile app for the Android platform using Ionic and Cordova",
            "Leading the development of mobile apps",
            "Development SPA web app made with Angular",
        ]
        all_responsibilities = [
            Responsibility(description=responsibility)
            for responsibility in responsibilities
        ]

        column_skill = cast(sa.Column[str], Skill.skill)
        skills_list = [
            "HTML",
            "CSS",
            "Android Development",
            "Java",
            "Phonegap",
            "Adobe Flex",
            "Adobe AIR",
        ]
        statement = select(Skill).where(column_skill.in_(skills_list))
        mobile_app_skills = list(session.exec(statement).all())
        
        images= [
            "./projects/tarjado/cover.png",
            "./projects/tarjado/1.png",
            "./projects/tarjado/2.png",

        ]
        
        
        project = Project(
            key="mobile-app-tarjado",
            project="Vessel Tallying Mobile Application",
            shortDescription="The Vessel Tallying Application was designed to replace the old Tallying system used at GRUPO CICE.",
            fullDescription="The Vessel Tallying Application was designed to replace the old Tallying system used at GRUPO CICE.",
            link="/portfolio/app1.jpg",
            projectLink="#",
            cover="./projects/tarjado/cover.png",
            professional_experience=pe,
            start_date=date(2012, 9, 1), 
            end_date=date(2013, 4, 1),
            categories=mobile_app_categories,
            images=[ProjectImages(url=image) for image in images],
            responsibilities=all_responsibilities,
            skills=mobile_app_skills,
        )
        session.add(project)
        session.commit()


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with Session(bind=op.get_bind()) as session:
        statement = select(Project).where(Project.key=="mobile-app-tarjado")
        project=session.exec(statement).first()
        if project is None:
            return
        session.delete(project)
        session.commit()
        
    # ### end Alembic commands ###
