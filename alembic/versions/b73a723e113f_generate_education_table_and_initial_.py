"""generate education table and initial  data

Revision ID: b73a723e113f
Revises: f36ea99a2918
Create Date: 2025-08-03 21:53:08.818193

"""

from datetime import date
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlmodel import Session, select
from src.education.infrastructure.models import Education


# revision identifiers, used by Alembic.
revision: str = "b73a723e113f"
down_revision: Union[str, Sequence[str], None] = "f36ea99a2918"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

education_dict = {
        "title": "education.title",
        "dateStart": date(2005,8,4),
        "dateFinished": date(2009,8,4),
        "institute": "Instituto Tecnologico de Veracruz, Veracruz, Mexico",
        "description": "education.description",
    }

def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    try:
        table_obj:sa.Table=Education.__table__  # type: ignore
        table_obj.create(bind=op.get_bind())
    except Exception:
        print(type(Exception))
    finally:
        education_item = Education(**education_dict)
        with Session(bind=op.get_bind()) as session:
            session.add(education_item)
            session.commit()


def downgrade() -> None:
    """Downgrade schema."""
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###    
    statement=select(Education).where(Education.title==education_dict["title"],Education.institute==education_dict["institute"])
    with Session(bind=op.get_bind()) as session:
        item=session.exec(statement).first()
        session.delete(item)
        session.commit()
    table_obj:sa.Table=Education.__table__  # type: ignore
    table_obj.drop(bind=op.get_bind())