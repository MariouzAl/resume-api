"""update Education table to include user_id relationship to the profile

Revision ID: 116c5ac75d1b
Revises: b73a723e113f
Create Date: 2025-08-04 00:37:19.992504

"""

from typing import Sequence, Union

from alembic import op
from sqlmodel import Session, select
from src.education.infrastructure.models import Education
from src.profile.infrastructure.models import Profile


# revision identifiers, used by Alembic.
revision: str = "116c5ac75d1b"
down_revision: Union[str, Sequence[str], None] = "b73a723e113f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


education_dict = {
    "title": "education.title",
    "dateStart": "2005-08-04",
    "dateFinished": "2009-08-04",
    "institute": "Instituto Tecnologico de Veracruz, Veracruz, Mexico",
    "description": "education.description",
}


def upgrade() -> None:
    """Upgrade schema."""
    # ### end Alembic commands ###
    with Session(bind=op.get_bind()) as session:
        statement = select(Profile).where(Profile.email == "ace.mrivera@gmail.com")
        user = session.exec(statement).first()
        statement = select(Education).where(Education.user_id == None)  # noqa: E711
        education = session.exec(statement).first()
        if(education and user): 
            education.user_id = user.id
            session.add(education)
            session.commit()


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # ### end Alembic commands ###
    with Session(bind=op.get_bind()) as session:
        statement = select(Profile).where(Profile.email == "ace.mrivera@gmail.com")
        user = session.exec(statement).first()
        if user:
            statement = select(Education).where(Education.user_id == user.id)
            education = session.exec(statement).first()
        if education:
            education.user_id = None
            session.add(education)
            session.commit()
