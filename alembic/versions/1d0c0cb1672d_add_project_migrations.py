"""add project migrations

Revision ID: 1d0c0cb1672d
Revises: bf408f67b52c
Create Date: 2025-08-11 10:47:49.612006

"""

from datetime import date
from typing import Sequence, Union, cast

from alembic import op
import sqlalchemy as sa
from sqlmodel import Session, select

from src.professional_experience.infrastructure.models.professional_experience_model import (
    Company,
    ProfessionalExperience,
)
from src.project.infrastructure.models.project import Project
from src.project.infrastructure.models.project_category_model import ProjectCategory
from src.project.infrastructure.models.project_images import ProjectImages
from src.skills.infrastructure.models.Skill import Skill


# revision identifiers, used by Alembic.
revision: str = "1d0c0cb1672d"
down_revision: Union[str, Sequence[str], None] = "bf408f67b52c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### end Alembic commands ###
    with Session(bind=op.get_bind()) as session:
        statement = select(Company).where(Company.name == "Grupo CICE")
        cice = session.exec(statement).first()
        statement = select(ProfessionalExperience).where(ProfessionalExperience.company ==cice)
        pe = session.exec(statement).first()
        statement = select(ProjectCategory).where(ProjectCategory.name == "Apps")
        app_category = session.exec(statement).first()

        skill_column: sa.Column = cast(sa.Column[str], Skill.skill)
        skills_list = [
            "HTML",
            "CSS",
            "JavaScript",
            "TypeScript",
            "Android Development",
            "Java",
            "Ionic",
            "Phonegap",
            "Adobe Flex",
            "Adobe AIR",
        ]
        statement = select(Skill).where(skill_column.in_(skills_list))
        result = session.exec(statement).all()

        if cice is not None and app_category is not None:
            mobile_app_combustibles = Project(
                key="mobile-app-combustibles",
                project="Mobile app: Fuel Dispatch",
                shortDescription="A mobile application for Android devices, built using the Adobe AIR platform, designed to register fuel dispatches.",
                fullDescription="A mobile application for Android devices, built using the Adobe AIR platform, designed to register fuel dispatches.",
                start_date=date(2010, 1, 1),
                end_date=date(2015, 1, 1),
                link="/img/portfolio/app1.jpg",
                projectLink="#",
                cover="./projects/combustibles/cover.png",
                professional_experience=pe,
                images=[
                    ProjectImages(url="./projects/combustibles/cover.png"),
                    ProjectImages(url="./projects/combustibles/1.png"),
                    ProjectImages(url="./projects/combustibles/2.png"),
                    ProjectImages(url="./projects/combustibles/3.png"),
                    ProjectImages(url="./projects/combustibles/5.png"),
                ],
                categories=[app_category],
                skills=list(result),
            )
            session.add(mobile_app_combustibles)
            session.commit()


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with Session(bind=op.get_bind()) as session:
        statement = select(Project).where(Project.key == "mobile-app-combustibles")
        app_de_comb = session.exec(statement).first()
        if app_de_comb is not None:
            session.delete(app_de_comb)
            session.commit()
    # ### end Alembic commands ###
