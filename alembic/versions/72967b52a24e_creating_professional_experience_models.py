"""creating professional experience models

Revision ID: 72967b52a24e
Revises: 116c5ac75d1b
Create Date: 2025-08-05 14:03:45.588808

"""

from datetime import date
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlmodel import Session

from src.professional_experience.infrastructure.models.professional_experience_model import (
    Company,
    ProfessionalExperience,
)


# revision identifiers, used by Alembic.
revision: str = "72967b52a24e"
down_revision: Union[str, Sequence[str], None] = "116c5ac75d1b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

responsibilities = [
    "Developing mobile apps with Adobe Flex/Adobe Air consuming SOAP services built with Java",
    "Development of a mobile app for the Android platform using Android SDK with Java",
    "Development of a mobile app for the Android platform using Ionic and Cordova",
    "Leading the development of mobile apps",
    "Development SPA web app made with Angular",
]


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    try:
        op.create_table(
            "company",
            sa.Column("id", sa.Uuid(), nullable=False),
            sa.Column("name", sa.String(), nullable=False),
            sa.PrimaryKeyConstraint("id"),
        )
        op.create_table(
            "professional_experience",
            sa.Column("id", sa.Uuid(), nullable=False),
            sa.Column("key", sa.String(), nullable=False),
            sa.Column("company_id", sa.Uuid(), nullable=True),
            sa.Column("startDate", sa.Date(), nullable=False),
            sa.Column("endDate", sa.Date(), nullable=False),
            sa.Column("position", sa.String(), nullable=False),
            sa.ForeignKeyConstraint(
                ["company_id"],
                ["company.id"],
            ),
            sa.PrimaryKeyConstraint("id"),
        )
        op.create_table(
            "responsibility",
            sa.Column("id", sa.Uuid(), nullable=False),
            sa.Column("description", sa.String(), nullable=False),
            sa.Column("professional_experience_id", sa.Uuid(), nullable=True),
            sa.ForeignKeyConstraint(
                ["professional_experience_id"],
                ["professional_experience.id"],
            ),
            sa.PrimaryKeyConstraint("id"),
        )
    except Exception :
        print('Table existed but no problem ')
    # ### end Alembic commands ###
    with Session(bind=op.get_bind()) as session:
        cice = Company(name="Grupo CICE")
        session.add(cice)
        session.commit()
        session.add(
            ProfessionalExperience(
                position="Frontend and Mobile Developer",
                key="neus-team-grupo-cice",
                startDate=date(2015, 1, 1),
                endDate=date(2016, 1, 1),
                company=cice,
            )
        )

        session.commit()


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("responsibility")
    op.drop_table("professional_experience")
    op.drop_table("company")
    # ### end Alembic commands ###
